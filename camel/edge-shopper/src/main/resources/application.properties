# Uncomment to trust self signed certificates if they are presented by the Kubernetes API server
quarkus.kubernetes-client.trust-certs=true

# ImagePullPolicy to use
quarkus.openshift.image-pull-policy=IfNotPresent

quarkus.native.resources.includes=camel/routes.xml
camel.main.routes-include-pattern=camel/routes.xml

camel.main.source-location-enabled=true
camel.main.name=test

# quarkus.ssl.native=true
# quarkus.http.ssl.certificate.key-store-file=../edge-feeder/tls/truststore.jks
# quarkus.http.ssl-port=8443
# quarkus.http.insecure-requests=disabled
quarkus.http.host=0.0.0.0

# MQTT connectivity
# mqtt.uri = paho:detection/+?brokerUrl=tcp://broker-amq-mqtt:1883
mqtt.uri = paho:detection/+?brokerUrl=tcp://broker-amq-mqtt-0-svc:1883
%dev.mqtt.uri = paho:detection/+

# mqtt.uri.monitor = paho:monitor?brokerUrl=tcp://broker-amq-mqtt:1883
mqtt.uri.monitor = paho:monitor?brokerUrl=tcp://broker-amq-mqtt-0-svc:1883
%dev.mqtt.uri.monitor = paho:monitor


# AI/ML engine connectivity
endpoint.detections.host = http:tf-server.edge1.svc:8501
%dev.endpoint.detections.host = https:object-detection-rest-demo.apps.cluster-lv7nl.lv7nl.sandbox257.opentlc.com

# AI/ML engine connectivity
endpoint.price.host = http:price-engine:80
%dev.endpoint.price.host = http:localhost:8090


# S3 connectivity
old.camel.uri.s3=aws2-s3:\\$\{exchangeProperty.bucket\}.bucket?\
accessKey=UbxmFjm8B4w0MnBd1jn2\
&secretKey=RAW(DDsioA0YX09lTKYLIublXxv0B44nkJQhTQqwh+Ig)\
&region=us-east-1\
&uriEndpointOverride=http://s3.openshift-storage.svc:80\
&overrideEndpoint=true\
&useDefaultCredentialsProvider=false\
&autoCreateBucket=true

camel.uri.s3=aws2-s3:\\$\{exchangeProperty.bucket\}
%dev.camel.uri.s3=file:target/s3-\\$\{exchangeProperty.bucket\}/images/\\$\{exchangeProperty.product\}

camel.uri.central=http://feeder-edge1.apps.cluster-958kv.sandbox1500.opentlc.com/zip
%dev.camel.uri.central=file:target/zip

camel.uri.direct.datasource=direct:zip-service-read-s3
%dev.camel.uri.direct.datasource=direct:zip-service-read-filesystem

# Simulated S3 for local testing
# %dev.camel.uri.s3=file:target/s3-\\$\{exchangeProperty.bucket\}/images/\\$\{exchangeProperty.product\}
# %dev.camel.uri.s3=file:s3
# \u007B\u007D

# S3 connectivity
camel.component.aws2-s3.accessKey=minio
camel.component.aws2-s3.secretKey=minio123
camel.component.aws2-s3.region=us-east-1
# %dev.camel.component.aws2-s3.uriEndpointOverride=https://YOUR_MINIO_ROUTE
%dev.camel.component.aws2-s3.uriEndpointOverride=https://minio-api-edge1.apps.cluster-958kv.sandbox1500.opentlc.com
camel.component.aws2-s3.uriEndpointOverride=http://minio-service.edge1.svc:9000
camel.component.aws2-s3.overrideEndpoint=true
camel.component.aws2-s3.useDefaultCredentialsProvider=false
camel.component.aws2-s3.forcePathStyle=true


backend.simulator=false
%dev.backend.simulator=true

# filter to accept detections
score.accuracy=.6