<?xml version="1.0" encoding="UTF-8"?>
<!-- camel-k: language=xml -->

<routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://camel.apache.org/schema/spring"
        xsi:schemaLocation="
            http://camel.apache.org/schema/spring
            https://camel.apache.org/schema/spring/camel-spring.xsd">


	<!-- Write your routes here, for example: -->
    <route id="DEPRECATED">
        <from uri="servlet:/DEPRECATED?disableStreamCache=true"/>
        <!-- <from uri="servlet:/zip"/> -->
        <!-- <from uri="servlet:/test"/> -->

        <log message="handling input stream"/>
<!--         <to uri="file:../data?fileName=output"/>
 -->

        <removeHeaders pattern="*"/>
        <!-- Unzip -->
        <unmarshal>
            <zipFile usingIterator="true"/>
        </unmarshal>

        <split streaming="true" parallelProcessing="false">
            <simple>${body}</simple>
            <!-- <to uri="log:debug?showAll=true"/> -->
            <!-- <log message="${header.CamelFileName}: ${body}"/> -->
            <to uri="direct:store-image"/>
        </split>

        <log message="done streaming"/>
        <setBody>
            <simple>done</simple>
        </setBody>
    </route>


    <route id="newzip">
        <from uri="servlet:/zip?disableStreamCache=true"/>
        <to uri="file:ziptemp?fileName=images.zip"/>
        <log message="images.zip created"/>
        <to uri="exec:mv?args=ziptemp/images.zip zip/images.zip"/>
        <!-- <log message="renamed to images.zip.done"/> -->
        <setBody>
            <simple>done</simple>
        </setBody>
    </route>


    <route id="unzip">
        <!-- <from uri="file:zip?delete=true&amp;doneFileName=${file:name}.done"/> -->
        <from uri="file:zip?delete=true"/>
        <log message="unzipping..."/>
        <to uri="exec:unzip?args=-d tempfiles zip/images.zip"/>
        <log message="unzip completed."/>
    </route>

    <route id="store-image">
        <from uri="direct:store-image"/>
        <to uri="file:tempfiles?doneFileName=${file:name}.done"/>
    </route>

    <route id="file-reader">
        <!-- <from uri="file:tempfiles?delete=true&amp;recursive=true&amp;doneFileName=${file:name}.done"/> -->
        <from uri="file:tempfiles?delete=true&amp;recursive=true"/>
        <!-- <log message="file is: ${header.CamelFileName}"/> -->

        <choice>
            <when>
                <simple>${header.CamelFileName} regex "images/.*/.*\.(jpg|jpeg|JPG|JPEG)"</simple>

                <!-- <log message="valid: ${header.CamelFileName}"/> -->
                <to uri="direct:store-image-s3"/>

            </when>
            <otherwise>
                <log message="(only /images/class-x/*.jpg) IGNORED: ${header.CamelFileName}"/>
            </otherwise>
        </choice>
    </route>

    <route id="store-image-s3">
        <from uri="direct:store-image-s3"/>

        <setHeader name="CamelAwsS3Key">
            <simple>${header.CamelFileName}</simple>
        </setHeader>

        <setHeader name="CamelAwsS3ContentType">
            <simple>image/jpeg</simple>
        </setHeader>

        <to uri="aws2-s3:data"/>
        <!-- <log message="file stored: ${header.CamelAwsS3Key}"/> -->
    </route>

</routes>
